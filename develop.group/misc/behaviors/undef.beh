<<ignore -*- coding: utf-8 -*- >>

= 未定義値

== !setup

<<ignore
=== !schema 

{{{
command count :: array -> integer {
 list:tighten | list:length
};

}}}

>>

=== !name:len

{{{
list:length
}}}

=== !name:arr-count

{{{
 list:tighten | list:length
}}}

=== !name:obj-count

{{{
 properties | list:length
}}}

=== !name:arr

{{{
 [,1,,3,]
}}}

=== !name:obj

{{{
{
 "b":1,
 "d":3,
}
}}}


== !exec

* オブジェクトのプロパティ値が#'undefinedである事と、そのプロパティが存在しないことは完全に同値である。
*  配列の項目が#'undefinedである事と、その項目がが存在しないことは完全に同値である。 
  （特にルーズ配列では、配列の途中でも存在しない項目が許される。） 
* pvとitem（またはnth）は、完全に並行な挙動を持つ。

|= !input  |= !command   |= !output |= !exception |
| %%arr     | %%arr-count  | 2        | |
| %%obj     | %%obj-count  | 2        | |
| %%arr     | item 0      |          | Exception |
| %%obj     | pv   a      |          | Exception |
| %%arr     | item 1      | 1        | |
| %%obj     | pv   b      | 1        | |
| %%arr     | item 2      |          | Exception |
| %%obj     | pv   c      |          | Exception |
| %%arr     | item 3      | 3        | |
| %%obj     | pv   d      | 3        | |
| %%arr     | item 4      |          | Exception |
| %%obj     | pv   e      |          | Exception |
| %%arr     | each {pass} | %%arr     | |
| %%obj     | each --obj {pass} | %%obj| |

