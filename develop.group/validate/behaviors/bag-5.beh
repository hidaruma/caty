<<ignore -*- coding: utf-8 -*- >>

= バッグ型 その5 =

== !setup

== !schema:/bag.casm

{{{
module bag;

type t1 = {[
 (integer){1,2},
 string{0,},
]};

type t2 = {[
 (@foo any){1,2},
 string{0,},
]};


}}}

== !exec

|= input       |= command                  |= output |
|[1]           | validate --boolean bag:t1    | true    |
|[1,""]        | validate --boolean bag:t1    | true    |
|[1.1,""]      | validate --boolean bag:t1    | false   |
|[1.0,""]      | validate --boolean bag:t1    | true   |
|["a", -1]     | validate --boolean bag:t1    | true    |
|["a", "b",0]  | validate --boolean bag:t1    | true    |
|[1, 2]        | validate --boolean bag:t1    | true    |



|= input       |= command                  |= output |
|[@foo 1]      | validate --boolean bag:t2    | true    |
|[@foo 1,""]   | validate --boolean bag:t2    | true    |
|[@bar 1,""]   | validate --boolean bag:t2    | false   |
|[1,""]        | validate --boolean bag:t2    | false   |
|["a", @foo null]| validate --boolean bag:t2  | true    |
|["a", "b",@foo null]| validate --boolean bag:t2| true  |
|[@foo 1, @foo 2]| validate --boolean bag:t2  | true    |

