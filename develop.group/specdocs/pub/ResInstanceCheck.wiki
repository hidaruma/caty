<<ignore  -*- coding: utf-8 -*- >>

= リソースインスタンスのチェック

== リソースインスタンスのチェック

Rをリソースクラス、xをURL（の文字列）とする。「xをRに対してチェックする」ことには、
2つの状況と意味がある。

# WebサイトやWebAPIを作る前、企画段階／設計段階で、
  まだ存在しないURL x がリソースRのインスタンスとして適切であるかどうかを事前確認する。
# WebサイトやWebAPIが出来た後で、実在するURL x がリソースRのインスタンスとして振舞うかどうかを確認する。

=== 事前の確認

Rに含まれるアクションを a,,1,,, a,,2,,, ..., a,,n,, 、
そのインボーカー文字列を i,,1,,, i,,2,,, ..., i,,n,, とする。
インボーカー文字列はHTTPメソッドと動詞の組であり、チェッカー（'#'）条件は無視する。

URLパス名 x とインボーカー文字列 i,,1,,, i,,2,,, ..., i,,n,, を組にして、
(x, i,,1,,), (x, i,,2,,), ..., (x, i,,n,,) を作る。
それぞれの組がRのアクションにディスパッチされるなら、「xはRに対して適切（suitable）」である。
詳しく言えば、次がすべて成立すること：

* (x, i,,1,,) は a,,1,, を起動する。
* (x, i,,2,,) は a,,2,, を起動する。
* ...
* (x, i,,n,,) は a,,n,, を起動する。

x,,1,,, x,,2,,, ..., x,,N,, がN個のURLのとき、すべてのjについて、
「x,,j,,はRに対して適切」であるとき、これらのURL群はRに対して適切である。

=== 事後の確認

前節と同じ記号法を使うことにして； インボーカー i,,k,,（k = 1, 2, ..., n ）のチェッカー条件を c,,k,, とする。

基本チェッカー条件としては次のものがある。

# exists -- URLに対応するファイル／ディレクトリが存在する。（デフォルト条件）
# exists-parent -- URLの親に対応するファイル／ディレクトリが存在する。
# dont-care -- 強制的に無条件とする。
# secure -- HTTPSで通信が行われている。

dont-careは論理的な述語ではなくて、条件を打ち消す命令である。「exists ならば exists-parent」なので、
existsとexists-parentは独立ではない。
基本チェッカー条件を組み合わせたチェッカー条件全体としては論理的な述語となり、
真偽を判定できる。

「xはRに対して妥当（valid）」の意味を次のように定める。

* xは、すべてのkに対して、c,,k,,を満たし、(x, i,,k,,) は a,,k,, を起動する。

x,,1,,, x,,2,,, ..., x,,N,, がN個のURLのとき、すべてのjについて、
「x,,j,,はRに対して妥当」であるとき、これらのURL群はRに対して妥当である。




