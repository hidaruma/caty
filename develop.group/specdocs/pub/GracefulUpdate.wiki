<<ignore  -*- coding: utf-8 -*- >>

= グレースフルな更新方法

コマンドを削除する場合、仕様変更をする場合に、
他の部分への急激な影響を避けるために、段階的に行う方法を述べる。

== 概要

* コマンドを削除する場合は、deprecatedフェーズを通過して削除する。
* コマンドの仕様を変える場合は、changingフェーズとchangedフェーズを通過して更新する。
* コマンドがdeprecatedフェーズにあることは、@[deprecated]アノテーションによりマークする。
* コマンドがchangingフェーズ、changedフェーズにあることは、それぞれ @[changing]、@[changed]アノテーションによりマークする。
* changingフェーズ、changedフェーズにあるコマンドは、--compatオプションを備えなくてはならない。
* changingフェーズ、changedフェーズにあるコマンドは、環境変数COMPATを認識しなくてはならない。
* changedフェーズにあるコマンドは後方互換性を持たない。後方互換モードでは
Changed例外が発生して、スクリプト実行は強制終了する。
* 移行期間（deprecated, changing, changedフェーズ）のコマンドに対応した修正を行うには、
ツールが必要となる。

== コマンドを削除する場合

# 削除（廃止）予定のコマンドに@[deprecated]アノテーションを付ける。
# deprecatedなコマンドが実行されると（Catyにより）ログに記録される。
# deprecatedなコマンドが呼ばれなくなったのを確認して削除する。


== コマンドの仕様変更をする場合

# 変更予定のコマンドに、互換性対策（後述）を行う。
# 変更予定のコマンドに@[changing]アノテーションを付ける。
# changingなコマンドが実行されると（Catyにより）ログに記録される。
# 他のコマンドがchangingなコマンド新仕様への対応が済んだのを確認して、
互換性対策を変更する。
# @[changing]を@[changed]アノテーションに変える。
# changedなコマンドが後方互換モードで実行されるとChanged例外が発生する。
# 適当な時期に、互換性対策も削除して@[changed]アノテーションを消す。

== 互換性対策

仕様変更をするときは、プログラマは次の作業を行う。（自動化も可能かも知れない。）

# --compatオプションをサポートする。--compatは boolean? として、三値 (true | false | undefined) を取る。
# --compat=true のときは以前と同じ動作をする。
# --compat=false のときは新しい動作をする。
# --compatの値が#'undefinedのときは、環境変数COMPATの値を採用する。
# 環境変数COMPATが定義されてないときは、デフォルト値（後述）を採用する。

=== changingフェーズのとき

* --compatのデフォルト値をtrueとする。
* つまり、--compatが指定されず、環境変数COMPATも定義さてないなら、後方互換の動作をする。 
* changingなコマンドが実行されると（Catyにより）ログに記録される。これは、
deprecatedのときと同じだが、
  後方互換モードのときだけ記録するのが望ましい。

=== changedフェーズのとき

changedフェーズでは、後方互換の動作をするコードは削除してよい。

* --compatにtrueが指定されたとき、
 または、--compatが指定されずに環境変数COMPATの値がtrueのときは、
 Changed例外を投げる。

=== changedフェーズの後

後方互換の動作をするコードも、--compat, COMPATに対するコードも取り除いてよい。

=== compat特殊コマンド

compat特殊コマンドは、引数により環境変数COMPATを操作する。

# 引数なし、環境変数COMPATの値を出力する。
# 引数が (true | "true" | "on") なら、環境変数COMPATの値をtrueにする。
# 引数が (false | "false" | "off") なら、環境変数COMPATの値をfalseにする。
# 引数が (undefined | "undefined") なら、環境変数COMPATを未定義にする。

== ツール

home-moduleコマンドは、コマンドのホームモジュール（
本籍地）を表示するコマンドだとする。
コマンド名が別名であるときは、ホームモジュールは別なモジュールとなる。

別名関係と呼び出し関係に対して、
その関係の転置関係（逆転関係）の推移的閉包を計算するコマンド（aliases, callers）が必要となる。

そのようなコマンドがあれば、次の問に答えられることになる。

# 指定されたコマンドの別名を、間接的な別名も含めてすべて列挙する。
# 指定されたコマンドを呼び出しているコマンドを、間接的な呼び出しも含めてすべて列挙する。

