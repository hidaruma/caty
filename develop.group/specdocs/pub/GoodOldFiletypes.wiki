<<ignore  -*- coding: utf-8 -*- >>

= Good  Old Filetypes

簡単なWebサイト作成とActions-CARAのフォールバックとして機能するファイルタイプ・ディスパッチについて。

== 機能

filetypesにより次のことが行える。

# ファイルの拡張子にMIMEメディアタイプを結びつける。（contentTypeプロパティ）
# そのメディアタイプのデータが、テキストとして解釈可能かどうかを指定する。（isTextプロパティ）
# 拡張子（と結びついたメディアタイプ）に短い説明を付ける。（descriptionプロパティ）
# いくつかの動詞に対するアクション（振る舞い）を関連付ける。（assocプロパティ）


関連付け（assoc）スクリプトは、動詞だけで識別され、従来のようなHTTPメソッド／チェッカーは**使用できない**。
使用できるHTTPメソッドはGETのみ。

== 機能を制限する理由

_filetypes.xjsonは廃止予定。
ファイルタイプは、_manifest.xjson内のfiletypesプロパティで定義する。
この方法であまり複雑なことをするのは推奨できない。
機能を制限することにより、actions/の利用を促す。

== ファイル名パターン

次が使用できる。

* ".ext" -- 指定された拡張子を持つファイル。
* ".ext/" -- 指定された拡張子を持つディレクトリ。

次の2つのパターンにはワイルドカードが利用される。

* "*" -- 拡張子を持たないファイル
* "*/" -- 拡張子を持たないディレクトリ

拡張子は必ずドットから始まる。拡張子内にドットを含むことができる。

* ".tar.gz" -- 圧縮されたtarファイル

まとめると：

|= 説明 |= ファイルパターン  |= ディレクトリパターン  |
|拡張子あり | ".<リテラル文字列>"  | ".<リテラル文字列>/"   | 
|拡張子なし | "*"            | "*/"   | 


== 拡張子名の制限

同じ名前の拡張子に異なったファイルタイプを割り当てることはできない。

また、大文字小文字だけの違いしか無い拡張子に異なったファイルタイプを割り当てることもできない。
例えば、.gif に image/gif を割り当て、.GIFに異なるMIMEタイプを与えることはできない。

== 記述形式

ファイルタイプは、次の形式で記述される。

{{{

"ファイル名パターン" : {
  "description" : string(remark="短い説明")?,
  @[default("application/octet-stream")]
  "contentType" : string(remark="MIMEメディアタイプ")?,
  @[default(false)]
  "isText" : boolean(remark="テキストかどうか")?,

  "assoc" : {
      "動詞名" : string(remark="スクリプト")?
  }?
}

}}}

動詞名は[[NameSyntax.wiki|名前構文]]に従う。が、アンダスコア1文字の動詞は禁止する。
空の動詞 "" を認める。

== CARAモジュールへのみなし変換

ファイルタイプの集合を、CARAモジュールとして解釈**したいとき**は、
次のルールによりCARAモジュールに変換した**かのごとくみなす。**

# モジュール名は _filetypes
# 拡張子名の先頭を大文字にした名前に、FileまたはDirを付けた名前がリソースクラス名。
## ドットは '_D'、アンダスコア文字は '_~_' によりエスケープする。.tar.gz --> Tar_DgzFile
## 拡張子が空の時は："*" --> File, "*/" --> Dir
# descriptionは文書コメントになる。
# "contentType" と"isText"は、filetype宣言となる。
# 動詞名がそのままアクション名になる。空な動詞は '_' という名前のアクションとなる。


例：

{{{
module _filetypes in cara;

/** HTMLファイル（テンプレートを含む） */
resource HtmlFile(".html") {
  filetype {"contentType":"text/html", "isText":true};

  action _ ("/GET") :: { print %0 };
  action get-text("get-text/GET") :: {
    print --raw --content-type=text/plain %0 
  };

};

/** 拡張子なしディレクトリ */
resource Dir("*/") {

  action _ ("/GET") :: { dir-index %0 GET };

};
}}}

上記により定義されるアクションは：

# HtmlFile._
# HtmlFile.get-text
# Dir._
