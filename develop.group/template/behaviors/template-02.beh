= テンプレートのテスト 2 foreach

== 設定

=== pub@this:/foreach.txt
{{{
<?caty-meta template="smarty" ?>
{foreach from=$CONTEXT item=it}{$it}+{/foreach}
}}}

=== pub@this:/foreachelse.txt
{{{
<?caty-meta template="smarty" ?>
{foreach from=$CONTEXT item=it}{$it}+{foreachelse}*else*{/foreach}
}}}

=== scripts@this:/foreach.caty
{{{
expand /foreach.txt | text:chop
}}}

=== scripts@this:/foreachelse.caty
{{{
expand /foreachelse.txt | text:chop
}}}

== 注意

上のsetupは効いてないようだ。ファイルシステムのファイルが使われる。

== !exec

目視確認用：

|= !command   |= !params                  |= !output |
| file:read   |     pub@this:/foreach.txt ||
| file:read   |     pub@this:/foreachelse.txt ||
| file:read   | scripts@this:/foreach.caty  ||
| file:read   | scripts@this:/foreachelse.caty  ||


|= command         |=input   |= output |=  備考 |
|call /foreach.caty      |[1, 2]   |"1+2+"   | |
|call /foreach.caty      |["a", "b"]   |"a+b+"   | |
|call /foreach.caty      |["hello", "world"]   |"hello+world+"   | |
|call /foreach.caty      |["", "", ""]     |"+++"   | |
|call /foreach.caty      |["", null, ""]   |"+++"   | |
|call /foreach.caty      |{"a":1, "b":2}   |"1+2+"  |値がitに代入される。 |


== !exec

ここが実行されない。

|= command         |=input    |= output |=exception |=  備考 |
|call /foreachelse.caty  |[1, 2, 3] |"1+2+3+" |||
|call /foreachelse.caty  |[]        |"*else*" |||
|call /foreachelse.caty  |null      |         |Exception|nullは空リスト扱いもあるかも  |
|call /foreachelse.caty  |0         |         |Exception| |
|call /foreachelse.caty  |-100      |         |Exception| |
|call /foreachelse.caty  |{}        |"*else*" |         | 空オブジェクトは空リストと同じ扱い | 
|call /foreachelse.caty  |false     |         |Exception| |
|call /foreachelse.caty  |true      |         |Exception| |
|call /foreachelse.caty  |"hello"   |         |Exception| これは例外のほうがいいと思う。 |




== 説明

実際には、テンプレートファイルとスクリプトはファイルシステムに書いてあります。


鍬田コメント： 文字列も iterable なので、実は foreach に文字列が渡せてしまいます。問題があれば修正します。


