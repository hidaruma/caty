# -*- coding: utf-8 -*- 

== null, true, falseの解釈

null, true, falseという名前はデータリテラルとして使えるが、
出現位置により解釈が変わる。

* コマンドの引数／オプション値として使うとき： データリテラルとして解釈される。
  文字列としたいときはクォートする必要がある。
  validate null には特に注意。
* タグ名として使うとき： 単に文字列と解釈される。@null は、@"null" と同じ。
  nullは予約されたタグ名だが、true, false は通常のタグ名として扱われる。
* whenの分岐タグとして使うとき： タグ名なので、単に文字列として解釈される。
  nullやstringなどを型名と解釈してもいいが、それは「タグ名が型名と一致している」からに過ぎない。\\
  タグ名とwhenの分岐タグには、整数値形式が使えるが、
  これは、整数値に見える文字列（数トークン）に過ぎない。整数値データ（integer）と解釈されるわけではない。
* caseの分岐型として使うとき： caseの分岐は型によるので、nullやstringは型名（特殊な型表現）と解釈される。
  nullの代わりに"null"と書くと、まったく違う意味（文字列のシングルトン型）になる。


==  拡張子登録がしてないとバイナリファイルとみなされる

テンプレートとの組み合わせでハマルぞ。
