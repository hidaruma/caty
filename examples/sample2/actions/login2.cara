// -*- coding: utf-8  -*-

/** ポートを使った（つもりの）ログインモジュール 
 
 # ポート宣言はコメントアウトしてある。
 # ポート名の参照のところで、port. で修飾した名前を使っている。

*/
module login2 in cara;


/** ログイン取りやめ時のリクエスト先 */
port cancel;

/** ログイン失敗時のリダイレクト先 */
port success;


/** 開始状態 */
@[abstract]
state start :: void links {
  - start --> Login.get;
}; 


/** ログイン画面の生成 */
resource Login("/login.html") {
  action get("/GET")
  :: @[in, out] #io void -> object produces login ;
  
};

/** ログイン画面 */
state login :: object links {
  /* IDとパスワードを入れてサブミット */
  - submit --> DoLogin.do-login;
  /* ログインは取りやめ 
   * cancel時ターゲットのURLなどはプログラムが実行時に教える必要がある。
   * 束縛が済まないと、
   * リクエスト（またはリダイレクト）先のアクションが確定しない。
   */
  cancel() --> port.cancel; // 
};

/** ログイン処理 */
resource DoLogin("/do-login.cgi") {
  action do-login("/POST")
  :: @[in]  #in object -> _      relays [ok, ng],
     @[out] #ok _      -> object redirects port.success,
     @[out] #ng _      -> _      redirects Login.get // retry
   ;

};
