// -*- coding: utf-8 -*-
/** FizzBuzz 
 * see [[http://d.hatena.ne.jp/m-hiyama-memo/20101109/1289265674]].
 */
module fb; 

/** 入力を1増やして出力する */
command inc :: integer -> integer
refers python:fb.Inc;

/** 入力が、引数で指定された数で割り切れるかどうかを判定する */
command dividable-by [integer] :: integer -> (@True integer | @False integer)
refers python:fb.Dividable;

/** coutの代替、入力に number も可能 */
command say :: number | string -> void
refers python:fb.Say;


/** 入力値を開始の数として、FizzBuzzを永遠に続ける。
 * 出力を生成することはないので、出力の型はneverである。
 */
command forever :: integer -> never {
 pass > in | dividable-by 15 |
 when {
   True  => ("Fizz Buzz" | cout),    // 15の倍数
   False => dividable-by 3 |
     when {
       True => ("Fizz" | cout),      // 3の倍数
       False => dividable-by 5 |
         when {
           True  => ("Buzz" | cout), // 5の倍数
           False => fb:say,          // その他
         }
      }
 };
 sleep 200;
 %in | inc | forward fb:forever
};

/** FizzBuzz forever その2 
 */
command forever2 :: integer -> never {
 dividable-by 15 |
 when {
   True => [pass, ("Fizz Buzz" | cout)] | nth 1,     // 15の倍数
   False => dividable-by 3 |
     when {
       True => [pass, ("Fizz" | cout)] | nth 1,      // 3の倍数
       False => dividable-by 5 |
         when {
           True  => [pass, ("Buzz" | cout)] | nth 1, // 5の倍数
           False => [pass, fb:say         ] | nth 1, // その他
         }
     }
 } | sleep 200 | inc | forward fb:forever2
};

command end :: void -> void {
 "bye" | cout
};


