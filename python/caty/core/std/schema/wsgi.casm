// -*- coding: utf-8 -*-
/** WSGI仕様に基づくWeb処理のエミュレーション */
module wsgi in casm;

/** エンティティボディを表現する入力ストリーム 
 * Pythonのfile-likeオブジェクトである。
 */
type InputStream = foreign;

/** 出力ストリーム 
 * Pythonのfile-likeオブジェクトである。
 */
type OutputStream = foreign;


/** WSGIアプリケーションコールバックへの入力データ */
type Environ = {

  /** HTTPメソッド */
  "REQUEST_METHOD": httpMethod,

  /** アプリケーションを識別する名前 */
  "SCRIPT_NAME" : string,

  /** リクエストパス */
  "PATH_INFO": string,

  /** クエリー文字列 */
  "QUERY_STRING": string,

  /** リクエストボディのメディア型 */
  "CONTENT_TYPE": mediaType?,

  /** リクエストボディの長さ */
  "CONTENT_LENGTH": string,

  /** サーバーのホスト名 */
  "SERVER_NAME": string,

  /** サーバーのポート番号、ただし文字列 */
  "SERVER_PORT": string,

  /** 使っているHTTPプロトコル */
  "SERVER_PROTOCOL": "HTTP/1.1",

  /** リクエストボディ（入力）を表現するfile-likeオブジェクト */
  "wsgi.input": InputStream,

  /** エラー出力のストリーム 
   * PEP333では必須のようだが、Catyではオプショナルとする。
   */
  "wsgi.errors": OutputStream?, 

  /** マルチプロセス処理をしているか */
  "wsgi.multiprocess": boolean,

  /** マルチスレッド処理をしているか */
  "wsgi.multithread": boolean,

  /** リクエストごとに毎回プロセス起動をするか */
  "wsgi.run_once": false,

  /** http または https */
  "wsgi.url_scheme": ("http" | "https"),

  /** WSGIのバージョン */
  "wsgi.version": [1, 0],

  * : univ?,
};

command make-env 
  {
    @[default(false)]
    "fullpath": boolean?,

    @[default("GET")]
    "method": string?,

    @[default("")]
    "verb": string?,

    "content-type": string?,

    @[default("http")]
    "url-scheme": string?,

    "server-name": string?, // デフォルトは設定から取るべきか？

    "server-port": integer?, // ここでは、文字列である必要性はないだろう。
     // デフォルトは設定から取るべきか？

    @[default(false)]
    "multiprocess": boolean?, // デフォルトは設定から取るべきか？

    @[default(true)]
    "multithread": boolean?, // デフォルトは設定から取るべきか？

  }
  [string path, string? query]
:: (null|string|binary) -> Environ
    throws InvalidInput
    refers python:caty.core.std.command.wsgilib.MakeEnv
;

type Response = {
    "status": integer,
    "header": {
        *: string?,
    },
    "body": (string | binary),
};

command call-application
  {
    @[default(false)]
    "no-middle": boolean?,
  }
:: Environ -> Response
    refers python:caty.core.std.command.wsgilib.CallApplication
;
