// -*- coding: utf-8 -*- 
module db;

/** コレクション参照型（実験的） 
 */
type reference<C> = @__r {
 "a": [integer],
 "t": typeName<C>, // targetName<C> が望ましいだろう。
};


command to-html [string?] :: any -> string {
  xj2h:xjson-to-html | xjx:markup  > content;
[
'''
<!DOCTYPE html>
<html>
<head>
 <meta charset="utf-8" >
 <title>''',
%1?="",

'''</title>
 <link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css" />
 <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
 <script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"></script>
</head>
<body>
 <div data-role="page">
   <div data-role="content" data-add-back-btn="true">
''',
%content,
'''
  </div>
 </div>
</body>
'''
] | text:concat
};



/* 型パラメータを持つクラス、型に対して汎用なコマンドを定義 
 */
class WebMethod<Key, Rec> = {
    command GET [Key id] :: void -> any {
        %1 > id;
        try { get %id } | catch {
            normal => pass,
            except => //レコードがなかったら適当な値を生成
              gen:sample<Rec> --string=implied | insert --output-rec %id,
        }
    };
    
    command emit-normal :: any -> WebOutput {
      to-html %UUSERVER_URL | response --ext=html
    };
};

/* == コレクションの定義 == */


/**
 * ランチのコレクション
 *
 */
collection lunch of {
 "id": integer, // とりあえず、gen:sampleが空にしないように必須にしておく
 "dateTime": ex:datetime,
 "author": {
      "name": ex:personName,
      "link": reference<person>,
  },
 "next" : reference<lunch>?,
 "prev" : reference<lunch>?,
 "content": {
    "写真": [ex:photo, ex:photo*]?,
    "コメント" : ex:sentence?,
  },
};
class lunch &= WebMethod<integer, recordType<lunch> > & {

  command index :: void -> [Reference*] {
    keys |
    each {
     pass > k;
     make-ref db:lunch %k
    }
  };
 
};



/**
 * 会社のコレクション
 *
 */
collection company of {
 "id": integer, // とりあえず、gen:sampleが空にしないように必須にしておく
 "会社名": string,
 "代表": reference<person>,
};
class company &= WebMethod<integer, recordType<company> >;


/**
 * 人物のコレクション
 *
 */
collection person of {
 "id" : integer,  // とりあえず、gen:sampleが空にしないように必須にしておく
 "名前": {
     "名": ex:givenName,
     "性": ex:familyName,
  },
 "年齢": integer(minimum=20, maximum=30),
 "知り合い達": [reference<person>*], //(maxItems=5), // gen:sampleが見ない
 "会社":  reference<company>?,
};
class person &= WebMethod<integer, recordType<person> >;

