// -*- coding: utf-8 -*- 

module db;

/** コレクション参照型（実験的） 
 */
type reference<C> = @__r {
 "a": [integer],
 "t": typeName<C>, // targetName<C> が望ましいだろう。
};

/** モジュールのエミッター */
command emit-normal {"ft": string?} :: any -> WebOutput {
  pass > in;
  %ft?="json" |
  cond {
    "json" => %in | xjson:to-json | json:response,
    "html" => %in | wrap-lib:to-jqm-html %UUSERVER_URL | response --ext=html,
     *     => "output format error" | json:response,
 }
};


/* 
 * == コレクションの定義 == 
 */

/**
 * ランチのコレクション
 *
 */
collection lunch of {
 "id": integer, // とりあえず、gen:sampleが空にしないように必須にしておく
 "dateTime": ex:datetime,
 "author": {
      "name": ex:personName,
      "link": reference<person>,
  },
 "next" : reference<lunch>?,
 "prev" : reference<lunch>?,
 "content": {
    "写真": [ex:photo, ex:photo*]?,
    "コメント" : ex:sentence?,
  },
};
class lunch &= web-util:MagicGetMix<Key=integer, recordType<lunch> > & web-util:IndexMix;

/**
 * 会社のコレクション
 *
 */
collection company of {
 "id": integer, // とりあえず、gen:sampleが空にしないように必須にしておく
 "会社名": string,
 "代表": reference<person>,
};
class company &= web-util:MagicGetMix<Key=integer, recordType<company> >  & web-util:IndexMix;

/**
 * 人物のコレクション
 *
 */
collection person of {
 "id" : integer,  // とりあえず、gen:sampleが空にしないように必須にしておく
 "名前": {
     "名": ex:givenName,
     "性": ex:familyName,
  },
 "年齢": integer(minimum=20, maximum=30),
 "知り合い達": [reference<person>*], //(maxItems=5), // gen:sampleが見ない
 "会社":  reference<company>?,
};
class person &= web-util:MagicGetMix<Key=integer, recordType<person> > & web-util:IndexMix;
