<<ignore  -*- coding: utf-8 -*- >>

= inspect-dispatch コマンド

== 目的

inspect-dispatchコマンドは、リクエストディスパッチの過程を、**詳細かつ完全に**報告する。

以下のコマンドは、inspect-dispatchコマンドの出力の一部分を提供する。

* select-action
* select-script
* trace-dispatch

== 注意

検索フェーズを何段階持つべきかは重要ではないので規定しない。
ただし、段数は定数でなくてはならない。

== パラメータ仕様

{{{
{
  /** 指定されたパス引数を、サイトルートからのフルパスと解釈する */
  @[default(false)]
  "fullpath" : boolean?

  /** チェッカー条件を考慮する */
  @[default(false)]
  "check" : boolean?

  /** このリクエストをHTTPSとして扱う */
  @[default(false)]
  "secure" : boolean?

  /** 動詞 */
  @[default("")]
  "verb" : string?,
  
  /** HTTPメソッド */
  @[default("GET")]
  "method" : HttpMetohd?,

} [string path]
}}}

== 出力の型

{{{
/** アクション検索過程の報告 */
type DispatchInspectReport = {

/* リクエスト情報 */

  /** アプリケーション名 
   * リクエストのターゲットなるアプリケーション
   */
  "app" : string,

  /** アプリケーションパス 
   * サイトからのフルパスではなく、
   * アプリケーション内のパス
   */
  "path" : string,

  /** リクエストのメソッド */
  "method" : HttpMethod,

  /** リクエストの動詞 */
  "verb" : string,

  /** HTTPSかどうか */
  "secure" : boolean,

/* アクション検索ルートの報告 */

  /** アクション検索ルート */
  "route" : [ (false|null|DispatchTrialReport)* ]

/* 最終結果 */

  /** アクション名 */
  "action" : (string|null),

  /** スクリプトテキスト*/
  "script" : (string|null),
};

/** リスース内アクション検索の報告 */
type DispatchTrialReport = {
  /** モジュール名
   * パッケージがあればパッケージ名も含む。
   */
  "mod" : string,

  /** リソースクラス名 */
  "res" : string,

  /** リソースクラスのパスパターン */
  "pat" : string,

  /** そのリソースクラスがfinishingであるかどうか */
  "fin" : boolean,

  /** アクション名 
   * 修飾がない裸のアクション名
   */
  "act" : (string|null),

  /** アクションに付いていたチェッカー */
  "chk" : (string|null),
};

}}}

== リクエスト情報

inspect-dispatchコマンドにパラメータから渡された情報を補完して、完全な情報を報告する。

== アクション検索ルートの報告

検索フェーズごとに、false, null, DispatchTrialReport のいずれかにより結果を報告する。

* false -- その検索フェーズにおいて、リクエスパスに該当するリソースクラスが発見できなかった。
  失敗を意味する。
* null -- その検索フェーズをスキップした。単なる穴埋めマーカー。
* DispatchTrialReport -- その検索フェーズにおいて発見されたリソースクラス内でのアクション検索の報告。

== リスース内アクション検索の報告

パスパターンにマッチするリソースクラスが発見された場合、その「モジュール名、
リソースクラス名、パスパターン、finishingフラグ」が報告される。

さらにマッチするアクションがあれば、そのアクション名と付随するチェッカーが報告される。
マッチするアクションがないときは、アクション名とチェッカーがnullとなる。

コマンドのcheckオプションがtrueのときは、アクションのマッチの後でチェッカー条件が検査されて、
チェッカー条件を満たさないならディスパッチ全体の失敗とみなす。#secure条件は、
コマンドのsecureオプションが設定されていれば満たされるとする。

上記のチェッカー検査方式は、**利便性から好ましくない**ので、将来的には変更される可能性がある。

== 最終結果

アクションが見つかれば、その名前（修飾された名前）と対応するスクリプトテキストが報告される。
アクションが見つからないなら、名前とスクリプトテキストはnullとなる。

== その他のコマンド

以下は、inspect-dispatchコマンドの一部の情報を出力するコマンド群である。

===  select-action コマンド

select-action コマンドは、inspect-dispatchの最終結果のアクション名だけを出力する。

exceptionオプションを付けると、検索失敗時にnullではなくて例外を引き起こす。

=== select-script コマンド

select-script コマンドは、inspect-dispatchの最終結果のスクリプトテキストだけを出力する。

exceptionオプションを付けると、検索失敗時にnullではなくて例外を引き起こす。


=== trace-dispatch コマンド

trace-dispatch コマンドは、inspect-dispatchのアクション検索ルートだけを報告する。
出力形式が少し変わる。

* マッチングが成功したがアクション検索で失敗したとき： モジュール名で修飾されたリソースクラス名だけが報告される。そのリソースクラスを訪れたことを示す。
* マッチング・検索が完全に成功したとき ： モジュール名とリソースクラス名で修飾されたアクション名が報告される。
* 全体の成功・失敗を示すタグが付く。
