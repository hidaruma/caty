<<ignore  -*- coding: utf-8 -*- >>

= 単純オーバーロード

Catyのコマンド名オーバーロードの仕様は今まで曖昧だった。**単純な方式**に限定して仕様を明確化する。

== 単純オーバーロードの概要

単純オーバーロードの「単純」は、処理系（コンパイラ／インタプリタ）にとって単純な方式を意味する。
ユーザーがオーバーロードを使う手順は単純ではなく、むしろ煩雑である。
しかし、コマンド名オーバーロードを使う機会はそれほど多くないのでヨシとする。

同じ名前を持ついくつかのコマンドの集まりを**オーバーロードグループ**（overloaded group）と呼ぶ。
オーバーロードグループのなかに唯一つだけ**主コマンド**があり、残りは**副コマンド**となる。
オーバーロードの解決はコマンドラインオプションを目安にして行われる。
オーバーロードの解決に使われるオプションを**弁別オプション**（discriminating option,  discriminator）と呼ぶ。


== 主コマンドの識別

オーバーロードグループの主コマンドは、overloadableアノテーションで識別する。

{{{
@[overloadable("opt") ]
command foo :: string -> number;
}}}

overloadableアノテーションのパラメータは必須で、弁別オプションの名前（の文字列）を指定する。

次の制約がある。

* 弁別オプションは、主コマンドのオプションとして出現してはならない。

弁別オプションが、コマンドのオプション宣言になければよい。オプション宣言にワイルドカード（'*'）を使っている場合は、
"opt" : undefined, として明示的に出現を禁止する。

== 副コマンドの識別

オーバーロードグループの副コマンドは、overloadedアノテーションで識別する。

{{{
@[overloaded("opt") ]
command foo {"opt" : true} :: void  -> object;
}}}

overloadedアノテーションのパラメータは原理的には省略可能だが可読性の観点から必須とする。
弁別オプションの名前（の文字列）を指定する。

次の制約がある。

* 同じモジュール内に同名の主コマンドが存在しなくてはならない。
* 弁別オプションは、主コマンドの弁別オプションと同じ名前が指定されてなくてはならない。
* 弁別オプションは、副コマンドのオプションとして必ず出現し、オプション値は非バイナリスカラー・シングルトン型でなくてはならない。
* 複数の副コマンドのあいだで、オプション値が重複してはならない（排他性の要求）。

== オーバーロード解決の処理

コンパイル時に、オーバーロードグループは確定する。
オーバーロードされたコマンド名にはその旨マークされるので、
実行時にオーバーロード解決をすべきかどうかはすぐに判断できる。

オーバーロードされたコマンド名のときは、弁別オプションを引き、コマンドラインに
弁別オプションがあるかどうかを見る。弁別オプションがなければ主コマンドを呼び出し、
弁別オプションがあれば、その値により副コマンドのどれかにディスパッチする。
オプション値の排他性の要求から、ディスパッチ先は一意に確定する。


弁別オプションの値が不正なときは、
主コマンドに対する「不正なオプション」エラーとする。
意味的には「コマンドが見つからない」エラーとするのが正しいが、
それではユーザーが「あるはずのコマンドがない」と混乱するだろう。

== その他の注意

* 主コマンドだけがあって副コマンドがないのはエラーではない。オーバーロード解決処理とも矛盾はしない。
* overloadable, overloadedの正しい指定なしに同じ名前のコマンドが登場したときはコンパイル時エラーとなる。
* オーバーロードされた同名のコマンドは、内部的にはまったく別なコマンドで、実装も（おそらくは）挙動も異なる。
  パラメトリック多相（多態）ではない。
* 弁別オプションに変数を使われると、コンパイル時にオーバーロード解決はできなくなる。
  実行時ディスパッチ・メカニズムは必須である。
* コンパイル時にオーバーロード解決ができないと、プロファイルを確定することができず、
  静的型解析もできない。
* 以上のデメリットがあるので、弁別オプションに変数を禁止することも考えられる。
  このときは、コンパイル時に弁別オプションを調べて確定してないならエラーとする。

弁別オプションに変数を許すと、型解析を実行時まで遅延する必要が出てくる。
このような現象があるので、実行時型解析が必要となる。




