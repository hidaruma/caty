= 複雑な型定義

型変数、インターセクション、シングルトン型、ドル記号などを用いる。
これは実務的な例。

== !setup

=== !schema

{{{
module t;

type URL = string(remark = "url format string");
type NameToken = string(remark = "name token");

type Binding = BindingSpec & {
   "actionName" : NameToken,
    * : any?
};

type BindingSpec = {
  "method" : ("GET" | "PUT" | "POST" | "HEAD"),
  "url" : URL,
  "verb" : NameToken?,
  * : any?
};

type BindigMap = {
  * : Binding?
};

@[internal]
type TriggerBase = {
 "$actionName" : NameToken,
 "$binding" : (string | BindingSpec),
  * : any?
};

type Trigger<ActionName in string default string> = TriggerBase & {"$actionName" : ActionName, * : any?};

type EditTrigger = Trigger<"edit">;

}}}

=== !name:b1

{{{

{
  "actionName" : "foo",
  "method" : "POST",
  "url" : "http://example.jp/do/that.act",
}

}}}

=== !name:b2

{{{

{
  "actionName" : "foo",
  "method" : "POST",
  "url" : "http://example.jp/do/that.act",
  "verb" : "do-foo",
}

}}}

=== !name:b3

{{{

{
  "method" : "POST",
  "url" : "http://example.jp/do/that.act",
}

}}}


=== !name:e1

{{{

{
 "$actionName" : "edit",
 "$binding" : "std-edit",
}

}}}

=== !name:e2

{{{

{
 "$actionName" : "ed",
 "$binding" : "std-edit",
}

}}}

== !exec 

|= command       |= params   |= input   |= output   |= 備考 |
|validate --boolean | t:Binding | %b1      | true      ||
|validate --boolean | t:Binding | %b2      | true      ||
|validate --boolean | t:Binding | %b3      | false     |actionNameがない|
|validate --boolean | t:EditTrigger | %e1  | true      ||
|validate --boolean | t:EditTrigger | %e2  | false     |"ed"になっている|







