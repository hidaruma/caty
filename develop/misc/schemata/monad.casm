// -*- coding: utf-8 -*-
/**
 *  Listモナドを定義してみる
 */

@[register-public]
module monad;

/** リスト型構成子 */
type List<T default any> = [T*];

/** リストのリスト */
type lislis = List<List<any>>;

/** リスト総称コマンド群 */
class List {

 /** Listのmap関数（持ち上げ） */
 command map<S default any, T default any> [string code] :: List<S> -> List<T>
 {
   each {[pass, %1] | eval}
 };

 /** Listのモナド乗法 */
 command flatten<T default any> :: List<List<T>> -> List<T>
 {
   list:concat
 };

 /** Listのモナド単位 */
 command unit<T default any> :: T -> List<T>
 {
   [pass]
 };

};

// End of Module
