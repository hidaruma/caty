// -*- coding: utf-8 -*-
module fcl;

type _AppInstance = foreign;



type Config = deferred;
type _Instance = foreign;


/** エラー情報 */
@[deprecated]
type Error = (string | {"message":string, *:any?});

/** ファシリティのモード */
type mode = ("read"|"update"|"use"); // useはなくなるかも

/**
 * ファシリティの管理のコマンドインターフェイス
 * これらのコマンドに対応するPythonメソッドが
 * Catyコア／シェルから自動的に呼ばれる。
 * 初期化に失敗したときは例外を投げる
 */
@[signature]
class ManageableAsFacility (_Instance) {

 /** システムの起動時にコールバックされる */
 @[static, management]
 command initialize [Config? conf]
 :: _AppInstance|null -> void  throws Exception
 ;

 /** システムの終了時にコールバックされる */
 @[static, management]
 command finalize 
 :: _AppInstance|null -> void
 ;

 /** リクエスターを生成・取得する 
  * 生成に失敗したときは例外を投げる
  */
 @[static, management, creator]
 command create [any system_param, mode mode, any? user_param]
 :: _AppInstance|null -> _Instance throws Exception
 ;

/* 以下のコマンドのarg0には、_Instanceがセットされる  */


 /** トランザクションを開始する */
 @[management, creator]
 command start :: void -> _Instance
 ;

 /** トランザクションをコミットする */
 @[management]
 command commit :: void -> void
 ;

 /** トランザクションをキャンセルする */
 @[management]
 command cancel :: void -> void
 ;

 /** リクエスタインスタンスの後始末 */
 @[management]
 command cleanup :: void -> void
 ;

};

